{\rtf1\ansi\ansicpg1252\deff0\nouicompat\deflang16393{\fonttbl{\f0\fnil\fcharset0 Calibri;}{\f1\fnil\fcharset0 Consolas;}{\f2\fnil Consolas;}}
{\colortbl ;\red0\green0\blue0;\red0\green0\blue255;\red0\green0\blue128;\red0\green128\blue128;\red255\green0\blue0;\red102\green0\blue153;\red148\green85\blue141;\red178\green0\blue178;\red255\green255\blue255;}
{\*\generator Riched20 10.0.17134}\viewkind4\uc1 
\pard\sa200\sl276\slmult1\f0\fs22\lang9 programs\par
-> Python always consdire as a \b string\b0  which we give in the program\par
-.> Python is a case sensitive\par
-> for format method we use 'f '\par
-> \cf1\f1\fs20\lang16393 Operator Precedence ('/','*','-','+')\par
-> First precedence give to in side parateces  ()\par
-> by using \b import math \b0 , we can use all math functions\par
-> check python 3 math function document.\par
-> Logical Operators: And, Or, Not\par
-> Comparison Operator : '>','<','==','!=\par
-> List is suppoert assignment. It is a mutable. Can change the items\par
-> Tuple does not support assignment. It is a immutable.\cf0\f0\fs22\lang9  Cannot change the items.\par
\cf1\f1\fs20\lang16393 -> Dictionaries : It is lika a key value pairs.\par

\pard\box\brdrdash\brdrw0 \cbpat9\sa200\sl276\slmult1 -> Function : it perform on few lines and perform specfic task\par

\pard\sa200\sl276\slmult1\cf0\f0\fs22\lang9 -> print  required some information  to print but function doesn't required any information.\par

\pard\box\brdrdash\brdrw0 \cbpat9\sa200\sl276\slmult1 -> \cf1\f1\fs20\lang16393 To handle error in python we have \b try and except .\par
\cf0\b0\f0\fs22\lang9 -> \cf1\f1\fs20\lang16393 classes usd for defining new type.\b\par

\pard\sa200\sl276\slmult1\cf0\b0\f0\fs22\lang9 -> Constructor is a function that gets call at time of creating object.\par
\par
Pro:1\par

\pard\box\brdrdash\brdrw0 \cbpat9\sa200\sl276\slmult1\cf1\f2\fs20 price= \cf2 100\line\cf1 price= \cf2 200\line\cf3 print\cf1 (price)\par
\f1\lang16393 O/P : 200\f2\lang9\par

\pard\sa200\sl276\slmult1\cf0\f0\fs22 * It will print 200 because print will read all the line and execute the line \par
Pro:2\par

\pard\box\brdrdash\brdrw0 \cbpat9\sa200\sl276\slmult1\cf1\f2\fs20 Full_name = \cf4\b 'Praneetha'\line\cf1\b0 Age= \cf2 26\line\cf3 print\cf1 (Full_name, Age)\par

\pard\sa200\sl276\slmult1\cf0\f0\fs22 Pro:3\par

\pard\box\brdrdash\brdrw0 \cbpat9\sa200\sl276\slmult1\cf1\f2\fs20 name= \cf3 input\cf1 (\cf4\b 'what is your name ?'\cf1\b0 )\line\cf3 print \cf1 (\cf4\b 'Hi ' \cf1\b0 + name)\par

\pard\sa200\sl276\slmult1\cf0\f0\fs22 O/P : what is your name ?>?\par
Praneetha\par
Hi Praneetha\par
* First it will print what is your name\par
We have to give our name using keyboard, then it will print\par
Hi Praneetha\par
Pro:4\par

\pard\box\brdrdash\brdrw0 \cbpat9\sa200\sl276\slmult1\cf1\f2\fs20 name= \cf3 input\cf1 (\cf4\b 'what is your name ?'\cf1\b0 )\line color=\cf3 input\cf1 (\cf4\b 'what is your fav color'\cf1\b0 )\line\cf3 print \cf1 ( name + \cf4\b ' likes ' \cf1\b0 + color)\par

\pard\sa200\sl276\slmult1\cf0\f0\fs22 O/P: what is your name ?>? pinky\par
what is your fav color>? blue\par
pinky likes blue\par
Pro:5\par

\pard\box\brdrdash\brdrw0 \cbpat9\sa200\sl276\slmult1\cf1\f2\fs20 birth_year= \cf3 input\cf1 (\cf4\b 'Birth_Year'\cf1\b0 )\line age= \cf2 2019\cf1 - \cf3 int\cf1 (birth_year)\line\cf3 print \cf1 (age)\par

\pard\sa200\sl276\slmult1\cf0\f0\fs22 O/P: Birth_Year>? 1994\par
25\par
*We can check the age difference.\par
* As a input i enter string '1994'\par
ain the line age the string converted into int and gave 25 as output.\par
Pro:6\par

\pard\box\brdrdash\brdrw0 \cbpat9\sa200\sl276\slmult1  \cf1\f2\fs20 course= \cf4\b "python's course for beginners"\line\cf3\b0 print \cf1 (course)\par

\pard\sa200\sl276\slmult1\cf0\f0\fs22  If we want to print      \b 's   \b0 use  double quots in the begin and end so it will print \par
\b O/P : python's course for beginners\par
\b0 Pro:7\par

\pard\box\brdrdash\brdrw0 \cbpat9\sa200\sl276\slmult1\cf1\f2\fs20 course= \cf4\b 'python course for "Beginners"'\line\cf3\b0 print \cf1 (course)\line\par

\pard\sa200\sl276\slmult1\cf0\f0\fs22 * To print important point in double quotes\par
O/P: python course for "Beginners"\par
Pro:8\par

\pard\box\brdrdash\brdrw0 \cbpat9\sa200\sl276\slmult1\cf1\f2\fs20 course= \cf4\b '''python course for "Beginners\line I started learning python'''\line\cf3\b0 print \cf1 (course)\line\line\f1\lang16393 O/P : python course for "Beginners\par
I started learning python\cf0\f0\fs22\lang9\par

\pard\sa200\sl276\slmult1 *To print more number of lines have to use \b ''' '''\par
\b0 Pro:9\par

\pard\box\brdrdash\brdrw0 \cbpat9\sa200\sl276\slmult1\cf1\f2\fs20 course= \cf4\b 'python course for Beginners'\line\cf3\b0 print \cf1 (course[\cf2 9\cf1 ])\par

\pard\sa200\sl276\slmult1\cf0\f0\fs22 O/P:  u\par
*We can print required index using \b []\par
\b0 * In Python index number start with \b 0 \b0 and space also counted.\par
Pro:10\par

\pard\box\brdrdash\brdrw0 \cbpat9\sa200\sl276\slmult1\cf1\f2\fs20 course= \cf4\b 'python course for Beginners'\line\cf3\b0 print \cf1 (course[-\cf2 9\cf1 ])\line\f1\lang16393 O/P: B\cf0\f0\fs22\lang9\par

\pard\sa200\sl276\slmult1 * To print the reverse index use negavtive integer example -3. It will count from end \par
Pro:11\par

\pard\box\brdrdash\brdrw0 \cbpat9\sa200\sl276\slmult1  \cf1\f2\fs20 course= \cf4\b 'python course for Beginners'\line\cf3\b0 print \cf1 (course[\cf2 0\cf1 :])\par
\b\f1\lang16393 OR\b0\par
\f2 course= \cf4\b 'python course for Beginners'\line\cf3\b0 print \cf1 (course[ : ])\f1\lang9\par
\lang16393 O/P: python course for Beginners\f2\lang9\par

\pard\sa200\sl276\slmult1\cf0\f0\fs22 *To print the whole line \par
Pro:12\par

\pard\box\brdrdash\brdrw0 \cbpat9\sa200\sl276\slmult1\cf1\f2\fs20 course= \cf4\b 'python course for Beginners'\line\cf3\b0 print \cf1 (course[ \cf2 1\cf1 :-\cf2 1 \cf1 ])\par

\pard\sa200\sl276\slmult1\cf0\f0\fs22 O/P: ython course for Beginner\par
* We can remove the first and last letter in the line.\par
Pro:13\par

\pard\box\brdrdash\brdrw0 \cbpat9\sa200\sl276\slmult1\cf1\f2\fs20 first= \cf4\b 'praneetha'\line\cf1\b0 last=\cf4\b 'katra'\line\cf1\b0 msg= first + \cf4\b '[' \cf1\b0 + last +\cf4\b '] is a coder'\line\cf1\b0 message= \cf4\b f'\cf3\{\cf1\b0 first\cf3\b\}\cf4  [\cf3\{\cf1\b0 last\cf3\b\}\cf4 ] is a coder'\line\cf3\b0 print \cf1 (message)\par

\pard\sa200\sl276\slmult1\cf0\f0\fs22 O/P: praneetha [katra] is a coder\par
* By  \b  \b0 using  \b  \cf1\f2\fs20 msg= first + \cf4 '[' \cf1 + last +\cf4 '] is a coder'\f1\lang16393   \cf0\b0 this method it may not understand what is the output.\par
* By using \b\f2\lang9 message= f'\{first\} [\{last\}] is a coder'\f1\lang16393  \b0 this method we can easily now what is gonig to print f is a format method\f2\lang9\line\par
\f1\lang16393 pro:14\par
How to count the letters ? \par
\b len\cf4\f2\lang9\par
\cf1\b0 course =\cf4\b "python is a code"\line\cf3\b0 print \cf1 (\cf3 len\cf1 (course))\par
\f1\lang16393 O/P: 16\par
pro:15\par
How to convert into upper case\par
\b upper\b0\par

\pard\box\brdrdash\brdrw0 \cbpat9\sa200\sl276\slmult1\f2\lang9 course =\cf4\b "python is a code"\line\cf3\b0 print \cf1 ((course.upper()))\par

\pard\sa200\sl276\slmult1\f1\lang16393 O/P: PYTHON IS A CODE\par
Pro:16\par
how to convert into  lower case\par
\b lower\par

\pard\box\brdrdash\brdrw0 \cbpat9\sa200\sl276\slmult1\b0\f2 course =\cf4\b "PYTHON IS A CODE"\line\cf3\b0 print \cf1 ((course.lower()))\par

\pard\sa200\sl276\slmult1\f1 O/P: python is a code\par
Pro:17\par
How to know paticular letter index postion\par
\b find\b0\par

\pard\box\brdrdash\brdrw0 \cbpat9\sa200\sl276\slmult1\f2 course =\cf4\b "PYTHON IS A CODE"\line\cf3\b0 print\cf1 (course.find(\cf4\b 'O'\cf1\b0 ))\par

\pard\sa200\sl276\slmult1\f1 O/P: 4\par
Pro:18\par
How to replace paticular letter or word are sentence\par
\b replace\f2\lang9\par

\pard\box\brdrdash\brdrw0 \cbpat9\sa200\sl276\slmult1\b0 course =\cf4\b "PYTHON IS A CODE"\line\cf3\b0 print\cf1 (course.replace(\cf4\b 'CODE'\cf1\b0 ,\cf4\b 'coder'\cf1\b0 ))\par

\pard\sa200\sl276\slmult1\cf0\f0\fs22 O/P: PYTHON IS A coder\par
Pro:19\par
How to find paticular letter or word or sentence in the exist line \par
\b in\par

\pard\box\brdrdash\brdrw0 \cbpat9\sa200\sl276\slmult1\cf1\b0\f2\fs20 course =\cf4\b "PYTHON IS A CODE"\line\cf3\b0 print\cf1 (\cf4\b 'PYTHON' \cf3 in \cf1\b0 course)\par

\pard\sa200\sl276\slmult1\cf0\f0\fs22 O/P: true\par
Pro:20\par
How to make paticular word as title\par
\par
Pro:21\par
Arthematic operation:\par

\pard\box\brdrdash\brdrw0 \cbpat9\sa200\sl276\slmult1\cf3\f2\fs20 print\cf1 (\cf2 10 \cf1 + \cf2 2\cf1 )\par
\cf3 print\cf1 (\cf2 10 \cf1\f1\lang16393 -\f2\lang9  \cf2 2\cf1 )\par
\cf3 print\cf1 (\cf2 10 \cf1\f1\lang16393 *\f2\lang9  \cf2 2\cf1 )\par
\cf3 print\cf1 (\cf2 10 \cf1\f1\lang16393 //\f2\lang9  \cf2 2\cf1 )\par
\f1\lang16393 Pro:22\par
Assignment Operator\par
\f2 x=\cf2 10\line\cf3 print\cf1 (x + \cf2 2\cf1 )\line\par
\f1 O/p:12\par
\f2 x=\cf2 10\par
\f1 x+=2\f2\line\cf3 print\cf1 (x)\line\par
x=\cf2 10\par
\f1 x-=2\f2\line\cf3 print\cf1 (x)\line\par
\f1 Pro:23\par
Operator Precedence\par
\f2 x=\cf2 10\cf1 +\cf2 3\cf1 -\cf2 2\cf1 *\cf2 4\cf1 /\cf2 6\line\cf3 print\cf1 (x)\line\f1 O/P: 11.666666666\par
Pro:24\par
How to get output without float method\par
\b round\b0\par
\f2 x=\cf2 10.3\line\cf3 print\cf1 (\cf3 round\cf1 (x))\par
\f1 O/P: 10\par
Pro:25\par
\f2 x=\f1 -\cf2\f2 10.3\line\cf3 print\cf1 (\cf3 round\cf1 (x))\par
\f1 O/P: -10\par
Pro:26\par
How to round the nearest high number\par
\b ceil\b0\par
\cf3\b\f2 import \cf1\b0 math\par
x=\cf2 10.3\line\cf3 print\cf1 (math.ceil(x))\par
\f1 O/P: 11\f2\par
\f1 pro:27\par
How to round the nearst lower number\par
\b floor\par
\cf3\f2 import \cf1\b0 math\line x=\cf2 10.3\line\cf3 print\cf1 (math.floor(x))\par
\f1 O/P: 10\par
Pro:28\par
How to use '\b if\b0 '\par
\f2 is_hot= \cf3\b True\line if \cf1\b0 is_hot:\line  \cf3 print\cf1 (\cf4\b "it's a hot day"\cf1\b0 )\line\cf3 print\cf1 (\cf4\b "Enjoy the day"\cf1\b0 )\par
\f1 O/P:it's a hot day\par
Enjoy the day\par
* if statement is true , print both statements.\par
Pro: 29\par
\f2 is_hot= \cf3\b False\line if \cf1\b0 is_hot:\line  \cf3 print\cf1 (\cf4\b "it's a hot day"\cf1\b0 )\line\line\cf3 print\cf1 (\cf4\b "Enjoy the day"\cf1\b0 )\par
\f1 If statement is false print last one\par
O/P: Enjoy the day\par
Pro: 30\par
Use if and else\par
\f2 is_hot= \cf3\b False\line if \cf1\b0 is_hot:\line  \cf3 print\cf1 (\cf4\b "it's a hot day"\cf1\b0 )\line  \cf3 print\cf1 (\cf4\b "it's a your day"\cf1\b0 )\line\cf3\b else\cf1\b0 :\line  \cf3 print\cf1 (\cf4\b "Enjoy the day"\cf1\b0 )\par
\f1 O/P: Enjoy the day\par
* If statement is false the only last time will print\par
Pro:31\par
\f2 is_hot= \cf3\b True\line if \cf1\b0 is_hot:\line  \cf3 print\cf1 (\cf4\b "it's a hot day"\cf1\b0 )\line  \cf3 print\cf1 (\cf4\b "it's a your day"\cf1\b0 )\line\cf3\b else\cf1\b0 :\line  \cf3 print\cf1 (\cf4\b "Enjoy the day"\cf1\b0 )\line\par
\f1 * If statent is true , it prints first two lines.\par
Pro:32\par
 How to use esif statement to print different contions\par
\f2 is_hot= \cf3\b True\line\cf1\b0 is_cold: \cf3\b False\line if \cf1\b0 is_hot:\line  \cf3 print\cf1 (\cf4\b "it's a hot day"\cf1\b0 )\line\cf3\b elif \cf1\b0 is_cold:\line  \cf3 print\cf1 (\cf4\b "it's a your day"\cf1\b0 )\line\cf3\b else\cf1\b0 :\line  \cf3 print\cf1 (\cf4\b "Enjoy the day"\cf1\b0 )\par
\f1 o/P: it's a hot day\par
Pro:33\par
\f2 is_hot= \cf3\b False\line\cf1\b0 is_cold=\cf3\b True\line if \cf1\b0 is_hot:\line  \cf3 print\cf1 (\cf4\b "it's a hot day"\cf1\b0 )\line\cf3\b elif \cf1\b0 is_cold:\line  \cf3 print\cf1 (\cf4\b "it's a your day"\cf1\b0 )\line\cf3\b else\cf1\b0 :\line  \cf3 print\cf1 (\cf4\b "Enjoy the day"\cf1\b0 )\par
\f1 O/P: it's a your day\par
pro: 34\par
\f2 is_hot= \cf3\b False\line\cf1\b0 is_cold=\cf3\b False\line if \cf1\b0 is_hot:\line  \cf3 print\cf1 (\cf4\b "it's a hot day"\cf1\b0 )\line\cf3\b elif \cf1\b0 is_cold:\line  \cf3 print\cf1 (\cf4\b "it's a your day"\cf1\b0 )\line\cf3\b else\cf1\b0 :\line  \cf3 print\cf1 (\cf4\b "Enjoy the day"\cf1\b0 )\line\par
\f1 O/P:Enjoy the day\par
Pro:35\par
\f2 is_hot= \cf3\b True\line\cf1\b0 is_cold=\cf3\b True\line if \cf1\b0 is_hot:\line  \cf3 print\cf1 (\cf4\b "it's a hot day"\cf1\b0 )\line\cf3\b elif \cf1\b0 is_cold:\line  \cf3 print\cf1 (\cf4\b "it's a your day"\cf1\b0 )\line\cf3\b else\cf1\b0 :\line  \cf3 print\cf1 (\cf4\b "Enjoy the day"\cf1\b0 )\line\par
\f1 *If both are true, then it will print only first statement.\par
Pro:36\par
Logical Operators\par
And , or, Not\par
\f2 High_income= \cf3\b True\line\cf1\b0 Good_credit=\cf3\b True\line if \cf1\b0 High_income \cf3\b and \cf1\b0 Good_credit:\line     \cf3 print\cf1 (\cf4\b "Ok"\cf1\b0 )\par
\f1 O/P: ok\f2\par
\f1 And: Two conditions must be true.\par
\f2 High_income= \cf3\b True\line\cf1\b0 Good_credit=\cf3\b False\line if \cf1\b0 High_income \cf3\b or \cf1\b0 Good_credit:\line     \cf3 print\cf1 (\cf4\b "Ok"\cf1\b0 )\line\par
\f1 O/P: ok\par
OR: atleast one statement is true.\par
\f2 High_income= \cf3\b True\line\cf1\b0 Good_credit=\cf3\b False\line if \cf1\b0 High_income \cf3\b and not \cf1\b0 Good_credit:\line     \cf3 print\cf1 (\cf4\b "Ok"\cf1\b0 )\par
\f1 O/P: ok\par
Not give reverse output. true changes to flase\par
Pro:37\f2\line\f1 Comparison Operator\par
\f2 temp= \cf2 30\line\cf3\b if \cf1\b0 temp>\cf2 30\cf1 :\line     \cf3 print\cf1 (\cf4\b "it is hot"\cf1\b0 )\line\cf3\b else\cf1\b0 :\line     \cf3 print\cf1 (\cf4\b "not hot"\cf1\b0 )\line\par
\f1 O/P: not hot\par
\f2\par
temp= \cf2 30\line\cf3\b if \cf1\b0 temp\f1 <\cf2\f2 30\cf1 :\line     \cf3 print\cf1 (\cf4\b "it is hot"\cf1\b0 )\line\cf3\b else\cf1\b0 :\line     \cf3 print\cf1 (\cf4\b "not hot"\cf1\b0 )\line\f1 O/P: it is hot\f2\par
\f1 Pro:38\par
\f2 name= \cf4\b 'pinky'\line\cf3 if \b0 len\cf1 (name)>\cf2 3\cf1 :\line  \cf3 print\cf1 (\cf4\b "name has atleast 3 char"\cf1\b0 )\line\cf3\b elif \b0 len\cf1 (name)<\cf2 50\cf1 :\line     \cf3 print\cf1 (\cf4\b "name has more than 3 char"\cf1\b0 )\line\cf3\b else\cf1\b0 :\line     \cf3 print\cf1 (\cf4\b "name is good"\cf1\b0 )\line\par
\f1 Pro:39\par
How to use while loop\par
\f2 i=\cf2 1\line\cf3\b while \cf1\b0 i<=\cf2 5\cf1 :\line     \cf3 print\cf1 (\cf4\b '*' \cf1\b0 * i)\line     i=i+\cf2 1\par
\cf1\f1 O/P:\par
*\par
**\par
***\par
****\par
*****\par
Pro:40\par
\b For Loop\par
How to use List?\par
\cf3\f2 for \cf1\b0 item \cf3\b in \cf1\b0 [\cf4\b 'm'\cf1\b0 ,\cf4\b 'k'\cf1\b0 ,\cf4\b 'l'\cf1\b0 ]:\line     \cf3 print\cf1 (item)\line\par
\b\f1 O/P: M\par
     k\par
    l\par
Pro:41\par
\cf3\f2 for \cf1\b0 item \cf3\b in \b0 range\cf1 (\cf2 10\cf1 ):\line     \cf3 print\cf1 (item)\par
\b\f1 * It wil print 0 to 9\par
Pro:42\par
\cf3\f2 for \cf1\b0 item \cf3\b in \b0 range\cf1 (\f1 5,\cf2\f2 10\cf1 ):\line     \cf3 print\cf1 (item)\par
\b\f1 * It will print 5,6,7,8,9\par
\cf3\f2 for \cf1\b0 item \cf3\b in \b0 range\cf1 (\f1 5,\cf2\f2 10\f1 ,2\cf1\f2 ):\line     \cf3 print\cf1 (item)\par
\f1 *It will print 5,7,9\par
Pro:43\par
\f2 prices = [\cf2 10\cf1 ,\cf2 20\cf1 ,\cf2 30\cf1 ]\line total =\cf2 0\line\cf3\b for \cf1\b0 price  \cf3\b in \cf1\b0 prices:\line     total += price\line\cf3 print\cf1 (\cf4\b f"Total:\cf3\{\cf1\b0 total\cf3\b\}\cf4 "\cf1\b0 )\par
\f1 Pro:44\par
\b nested loop\f2\par
\f1 Loop inside loop:\par
\cf3\f2 for \cf1\b0 x \cf3\b in \b0 range\cf1 (\cf2 4\cf1 ):\line     \cf3\b for \cf1\b0 y \cf3\b in \b0 range\cf1 (\cf2 3\cf1 ):\line         \cf3 print\cf1 (\cf4\b f'(\cf3\{\cf1\b0 x\cf3\b\}\cf4 ,\cf3\{\cf1\b0 y\cf3\b\}\cf4 )'\cf1\b0 )\par
\b (0,0)\f1 ,\f2 (0,1)\f1 ,\f2 (0,2)\f1 ,\f2 (1,0)\f1 ,\f2 (1,1)\f1 ,\f2 (1,2)\par
(2,0)\f1 ,\f2 (2,1)\f1 ,\f2 (2,2)\f1 ,\f2 (3,0)\f1 ,\f2 (3,1)\f1 ,\f2 (3,2)\par
\par
\f1 Pro:45\par
\b0\f2 num= [\cf2 5\cf1 ,\cf2 1\cf1 ,\cf2 5\cf1 ,\cf2 2\cf1 ,\cf2\f1 1,1\cf1\f2 ]\line\cf3\b for \cf1\b0 x_count \cf3\b in \cf1\b0 num:\line     \cf3 print\cf1 (\cf4\b 'x' \cf1\b0 * x_count)\line\par
\b\f1 O/P:\par
xxxxx\par
x\par
xxxxx\par
x\f2\par
\b0\f1 Pro:46\par
\f2 num= [\cf2 5\cf1 ,\cf2 1\cf1 ,\cf2 5\cf1 ,\cf2 2\cf1 ,\cf2 1\cf1 ]\line\cf3\b for \cf1\b0 x_count \cf3\b in \cf1\b0 num:\line     output=\cf4\b ''\line     \cf3 for \cf1\b0 count \cf3\b in \b0 range\cf1 (x_count):\line         output += \cf4\b 'X'\line     \cf3\b0 print\cf1 (output)\line\par
\f1 O/P:\par
XXXXX\par
X\par
XXXXX\par
X\par
X\par
Pro:47\par
List\par
\f2 name = [\cf4\b 'Anu'\cf1\b0 ,\cf4\b 'Adi'\cf1\b0 ,\cf4\b 'Prani'\cf1\b0 ,\cf4\b 'Anil'\cf1\b0 ,\cf4\b 'Ajay'\cf1\b0 ]\line\cf3 print\cf1 (name[\cf2 0\cf1 :])\line\par
\f1 O/P:\f2\par
['Anu', 'Adi', 'Prani', 'Anil', 'Ajay']\par
\f1 Pro:48\par
\f2 name = [\cf4\b 'Anu'\cf1\b0 ,\cf4\b 'Adi'\cf1\b0 ,\cf4\b 'Prani'\cf1\b0 ,\cf4\b 'Anil'\cf1\b0 ,\cf4\b 'Ajay'\cf1\b0 ]\line\cf3 print\cf1 (name[\cf2 2\cf1 :\cf2 4\cf1 ])\line\par
\f1 O/P: ['Prani', 'Anil']\par
Pro:49\par
\f2 name = [\cf4\b 'Anu'\cf1\b0 ,\cf4\b 'Adi'\cf1\b0 ,\cf4\b 'Prani'\cf1\b0 ,\cf4\b 'Anil'\cf1\b0 ,\cf4\b 'Ajay'\cf1\b0 ]\line name[\cf2 0\cf1 ]= \cf4\b 'john'\line\cf3\b0 print\cf1 (name[-\cf2 1\cf1 :])\line\cf3 print\cf1 (name)\par
\f1 O/P:\par
['Ajay']\par
['john', 'Adi', 'Prani', 'Anil', 'Ajay']\par
first print line gives only last name.\par
seconds print line gives only change first name and gives all lines.\par
Pro:50\par
List using for loop\par
\f2 name = [\cf2 3\cf1 ,\cf2 6\cf1 ,\cf2 2\cf1 ,\cf2 8\cf1 ,\cf2 4\cf1 ,\cf2 10\cf1 ]\line max=name[\cf2 0\cf1 ]\line\cf3\b for \cf1\b0 number \cf3\b in \cf1\b0 name:\line     \cf3\b if \cf1\b0 number>max:\line         max=number\line\cf3 print\cf1 (max)\par
\f1 O/P:\par
10\par
Pro:51\par
2D: List\par
\f2 num=[\line     \cf2 1\cf1 ,\cf2 2\cf1 ,\cf2 3\cf1 ,\line     \cf2 4\cf1 ,\cf2 5\cf1 ,\cf2 6\cf1 ,\line     \cf2 7\cf1 ,\cf2 8\cf1 ,\cf2 9\line\line\cf1 ]\line matrix= [\line     [\cf2 1\cf1 ,\cf2 2\cf1 ,\cf2 3\cf1 ],\line     [\cf2 4\cf1 ,\cf2 5\cf1 ,\cf2 6\cf1 ],\line     [\cf2 7\cf1 ,\cf2 8\cf1 ,\cf2 9\cf1 ]\line ]\line\cf3\b for \cf1\b0 row \cf3\b in \cf1\b0 matrix:\line     \cf3\b for \cf1\b0 item \cf3\b in \cf1\b0 row:\line         \cf3 print\cf1 (item)\par
\f1 O/P:\par
1\par
2\par
3\par
4\par
5\par
6\par
7\par
8\par
9\par
Pro:52\par
List Method\par
\b Append: It will add new number at last in the output\par
\b0\f2 num= [\cf2 5\cf1 ,\cf2 2\cf1 ,\cf2 1\cf1 ,\cf2 3\cf1 ,\cf2 7\cf1 ]\line num.append(\cf2 20\cf1 )\line\cf3 print\cf1 (num)\par
[5, 2, 1, 3, 7, 20]\par
\f1 Pro:53\par
\b Insert: I t will insert the new number i a paticular postion by using Inder number\b0\par
\f2 num= [\cf2 5\cf1 ,\cf2 2\cf1 ,\cf2 1\cf1 ,\cf2 3\cf1 ,\cf2 7\cf1 ]\line num.insert(\cf2 3\cf1 ,\cf2 10\cf1 )\line\cf3 print\cf1 (num)\par
[5, 2, 1, 10, 3, 7]\par
\f1 Pro:54\par
\b Remove : To remove paticural number\par
\b0\f2 num= [\cf2 5\cf1 ,\cf2 2\cf1 ,\cf2 1\cf1 ,\cf2 3\cf1 ,\cf2 7\cf1 ]\line num.remove(\cf2 3\cf1 )\line\cf3 print\cf1 (num)\par
\f1 O/P:[5, 2, 1, 7]\par
pro:55\par
\b pop: remove last number\par
\b0\f2 num= [\cf2 5\cf1 ,\cf2 2\cf1 ,\cf2 1\cf1 ,\cf2 3\cf1 ,\cf2 7\cf1 ]\line num.pop()\line\cf3 print\cf1 (num)\par
\f1 O/P: [5, 2, 1, 3]\par
Pro:56\par
\b Clear\b0  : It will remove all the items\par
\f2 num= [\cf2 5\cf1 ,\cf2 2\cf1 ,\cf2 1\cf1 ,\cf2 3\cf1 ,\cf2 7\cf1 ]\line num.\f1 clear\f2 ()\line\cf3 print\cf1 (num)\par
\f1 Pro:57\par
Index method\par
\f2 num= [\cf2 5\cf1 ,\cf2 2\cf1 ,\cf2 1\cf1 ,\cf2 3\cf1 ,\cf2 7\cf1 ]\line\cf3 print\cf1 (\cf2 5 \cf3\b in \cf1\b0 num)\par
\f1 O/P: True\par
Pro:58\par
\f2 num= [\cf2 5\cf1 ,\cf2 2\cf1 ,\cf2 1\cf1 ,\cf2 3\cf1 ,\cf2 7\cf1 ]\line\cf3 print\cf1 (\cf2 5\f1 0\f2  \cf3\b in \cf1\b0 num)\par
\f1 O/P: False\par
pro:59\par
\f2 num= [\cf2 5\cf1 ,\cf2 2\cf1 ,\cf2 1\cf1 ,\cf2 3\cf1 ,\cf2 7\cf1 ,\cf2 1\cf1 ,\cf2 3\cf1 ,\cf2 3\cf1 ,\cf2 3\cf1 ]\line\cf3 print\cf1 (num.count(\cf2 1\cf1 ))\line\f1 O/P: 2\par
* It count jow many '1' are there in the items.\par
Pro:60\par
Sort method in asc\par
\f2 num= [\cf2 5\cf1 ,\cf2 2\cf1 ,\cf2 1\cf1 ,\cf2 3\cf1 ,\cf2 7\cf1 ,\cf2 1\cf1 ,\cf2 3\cf1 ,\cf2 3\cf1 ,\cf2 3\cf1 ]\line num.sort()\line\cf3 print\cf1 (num)\par
\f1 O/P:[1, 1, 2, 3, 3, 3, 3, 5, 7]\par
Sort method in Desc\par
\f2 num= [\cf2 5\cf1 ,\cf2 2\cf1 ,\cf2 1\cf1 ,\cf2 3\cf1 ,\cf2 7\cf1 ,\cf2 1\cf1 ,\cf2 3\cf1 ,\cf2 3\cf1 ,\cf2 3\cf1 ]\line num.sort()\line num.reverse()\line\cf3 print\cf1 (num)\par
\f1 O/P: [7, 5, 3, 3, 3, 3, 2, 1, 1]\par
Pro:60\par
\b Copy of orignal list\b0\par
\f2 num= [\cf2 5\cf1 ,\cf2 2\cf1 ,\cf2 1\cf1 ,\cf2 3\cf1 ,\cf2 7\cf1 ,\cf2 1\cf1 ,\cf2 3\cf1 ,\cf2 3\cf1 ,\cf2 3\cf1 ]\line number=num.copy()\line number.sort()\line number.reverse()\line\cf3 print\cf1 (num)\line\cf3 print\cf1 (number)\par
\f1 O/P:[5, 2, 1, 3, 7, 1, 3, 3, 3]\par
[7, 5, 3, 3, 3, 3, 2, 1, 1]\f2\par
\f1 *Second line in the program help us to copy the orignal list and perform the operations on it, without distrubing the orginal list.\par
Pro:61\par
\b How to remove duplicate.\par
\b0\f2 num= [\cf2 5\cf1 ,\cf2 2\cf1 ,\cf2 1\cf1 ,\cf2 3\cf1 ,\cf2 7\cf1 ,\cf2 1\cf1 ,\cf2 3\cf1 ,\cf2 3\cf1 ,\cf2 3\cf1 ]\line uniques=[]\line\cf3\b for \cf1\b0 numbers \cf3\b in \cf1\b0 num:\line     \cf3\b if \cf1\b0 numbers \cf3\b not in \cf1\b0 uniques:\line        uniques.append(numbers)\line\cf3 print\cf1 (uniques)\par
\f1 O/P: [5, 2, 1, 3, 7]\par
Pro:62\par
Tuples:\par
\f2 num=(\cf2 1\cf1 ,\cf2 2\cf1 ,\cf2 3\cf1 )\line num[\cf2 0\cf1 ]=\cf2 10\line\cf3 print\cf1 (num[\cf2 0\cf1 ])\par
\f1 TypeError: 'tuple' object does not support item assignment\par
Pro:63\par
\b Unpacking\par
\b0\f2 num=(\cf2 1\cf1 ,\cf2 2\cf1 ,\cf2 3\cf1 )\line x,y,z= num\line\cf3 print\cf1 (y)\par
\f1 O/P: 2\par
\f2 num=(\cf2 1\cf1 ,\cf2 2\cf1 ,\cf2 3\cf1 )\line x,y,z= num\line\cf3 print\cf1 (y\f1 *z\f2 )\par
\f1 O/P: 6\par
* Unpacking help us to print paticular items.\par
*It will help us do different operation with indexes like add, sub, multiplying e.t.c.\par
Pro:64\par
\b Dictionaries : It is lika a key value pairs\par
\b0\f2 customer=\{\line     \cf4\b "name"\cf1\b0 : \cf4\b "pranitha"\cf1\b0 ,\line     \cf4\b "age" \cf1\b0 : \cf2 30\cf1 ,\line     \cf4\b "sal"\cf1\b0 :\cf2 20\cf1 ,\line     \cf4\b "is_verified"\cf1\b0 : \cf3\b True\line\cf1\b0\}\line\cf3 print \cf1 (customer[\cf4\b "name"\cf1\b0 ])\par
\f1 O/p: pranitha\par
* In this program name is a give and it print the value which is mentioned in the input.\par
* If the key is not exist, then it will give error type.\f2\par
\f1 Pro:65\par
\f2 customer=\{\line     \cf4\b "name"\cf1\b0 : \cf4\b "pranitha"\cf1\b0 ,\line     \cf4\b "age" \cf1\b0 : \cf2 30\cf1 ,\line     \cf4\b "sal"\cf1\b0 :\cf2 20\cf1 ,\line     \cf4\b "is_verified"\cf1\b0 : \cf3\b True\line\cf1\b0\}\line\cf3 print \cf1 (customer.get(\cf4\b "age"\cf1\b0 ))\par
\f1 O/P: 30\f2\par
\f1 * get method : we can use '()' if we use get \par
* Without get we have to use'[]'\par
Pro:66\par
\f2 customer=\{\line     \cf4\b "name"\cf1\b0 : \cf4\b "pranitha"\cf1\b0 ,\line     \cf4\b "age" \cf1\b0 : \cf2 30\cf1 ,\line     \cf4\b "sal"\cf1\b0 :\cf2 20\cf1 ,\line     \cf4\b "is_verified"\cf1\b0 : \cf3\b True\line\cf1\b0\}\par
\cf3 print \cf1 (customer.get(\cf4\b "birthdate"\cf1\b0 ,\cf4\b "jan 1 1980"\cf1\b0 ))\par
\f1 or we can write \par
\cf5 customer[" \b\f2 birthdate\f1 "] = \f2 "jan 1 1980"\b0\par
\f1 print(customer["birthdate])\par
\cf1\f2\line\f1 O/P: jan 1 1980\par
* Get used to insert the new data.\par
\par
Pro:67\par
\f2 phone= \cf3 input\cf1 (\cf4\b "phone:"\cf1\b0 )\line digi_mapping=\{\line\cf4\b "1"\cf1\b0 : \cf4\b "One"\cf1\b0 ,\line\cf4\b "2"\cf1\b0 : \cf4\b "two"\cf1\b0 ,\line\cf4\b "3"\cf1\b0 : \cf4\b "three"\cf1\b0 ,\line\cf4\b "4"\cf1\b0 : \cf4\b "four"\line\cf1\b0\}\line output= \cf4\b ""\line\cf3 for \cf1\b0 ch \cf3\b in \cf1\b0 phone:\line     output +=digi_mapping.get(ch,\cf4\b "!"\cf1\b0 ) + \cf4\b ""\line     \cf3\b0 print\cf1 (output)\line\par
\f1 O/P: One\par
Onethree\par
Onethreefour\par
Pro:68\par
split is used to divide the sentence in words.\par
Input Hi ra \par
\f2 msg=\cf3 input\cf1 (\cf4\b ">"\cf1\b0 )\line words=msg.split(\cf4\b ' '\cf1\b0 )\line\cf3 print\cf1 (words)\par
\f1 O/P: [Hi, ra ]\par
Pro: 69\par
Emoji Symbols\par
\f2 msg=\cf3 input\cf1 (\cf4\b ">"\cf1\b0 )\line words=msg.split(\cf4\b ' '\cf1\b0 )\line emojis= \{\line     \cf4\b ":)" \cf1\b0 : \cf4\b " :("\line\cf1\b0\}\line output= \cf4\b ""\line\cf3 for \cf1\b0 word \cf3\b in \cf1\b0 words:\line     output += emojis.get(word,word)+ \cf4\b " "\line\cf3\b0 print\cf1 (output)\par
\f1 * Not Understood.\par
Pro:70\par
\b Function : it perform on few lines and perform specfic task.\par
After function defination , give two blank lines.\par
First we have to defined the function and call the function.\par
\b0 Pro: 71\par
parameter means which supply in defined function line.\par
argument means which is sullpy in calling function line.\par
\cf3\b\f2 def \cf1\b0 greet_user(name):\line\line    \cf3 print \cf1 (\cf4\b f'Hi \cf3\{\cf1\b0 name\cf3\b\}\cf4 !'\cf1\b0 )\line    \cf3 print\cf1 (\cf4\b 'welcome'\cf1\b0 )\line\line\line\cf3 print\cf1 (\cf4\b "Start"\cf1\b0 )\line greet_user(\cf4\b "John"\cf1\b0 )\line greet_user(\cf4\b "marry"\cf1\b0 )\line\cf3 print\cf1 (\cf4\b "Finish"\cf1\b0 )\par
\f1 O/P:\par
Start\par
Hi John!\par
welcome\par
Hi marry!\par
welcome\par
Finish\par
Pro:72\par
\b Keyword Argument:\par
\b0 * In Python first we have to give postion argument and give keyword argument.\par
\cf3\b\f2 def \cf1\b0 greet_user(first_name, last_name):\line\line    \cf3 print \cf1 (\cf4\b f'Hi \cf3\{\cf1\b0 first_name, last_name\cf3\b\}\cf4 !'\cf1\b0 )\line    \cf3 print\cf1 (\cf4\b 'welcome'\cf1\b0 )\line\line\line\cf3 print\cf1 (\cf4\b "Start"\cf1\b0 )\line greet_user(\cf4\b "John"\cf1\b0 , \cf6 last_name\cf1 = \cf4\b "smith"\cf1\b0 )\f1  -------> John is postion argument, smith we\par
                                                gave key word argument.                 \f2\line\cf3 print\cf1 (\cf4\b "Finish"\cf1\b0 )\par
\f1 Pro:73\par
\b Return argument:\par
\cf3\f2 def \cf1\b0 square(number):\line     \cf3\b return \cf1\b0 number*number\line\cf3 print\cf1 (square(\cf2 3\cf1 ))\line\par
\f1 O/P: 9\par
pro:74\par
Exception\par
exit code 0 : means program successfully excuted\par
exit code 1: means program crash.\par
type of the errors:\par
value error \par
To handle error in python we have \b try and except \par
\cf3\f2 try\cf1\b0 :\line    age= \cf3 int\cf1 (\cf3 input\cf1 (\cf4\b 'age:'\cf1\b0 ))\line    \cf3 print\cf1 (age)\line\cf3\b except \b0 ValueError\cf1 :\line     \cf3 print\cf1 (\cf4\b 'Invalid value'\cf1\b0 )\line\par
\f1 O/P :age:>? qw\par
Invalid value\par
* Using try and exception , we will get invalid value message, if we give wrong input. \par
* different error are their for different issues.\par
Pro: 75\par
\b Comments:\par
\b0 to avoid the line in the execution part \par
'#'\par
Don't give length comments. Just use meaningfull and short comments which is understand by other developers.\par
\par
Pro: 76\par
\b Classes: It is used to define new types. \par
Base type: numbers, strings, booleans\par
compleix type: list, dictionaries\par
base type and compleix are comman. but classes used for defining new type.\par
Each attribute is different argument.\par
\cf3\f2 class \cf1\b0 Point:\line     \cf3\b def \cf1\b0 move(\cf7 self\cf1 ):\line         \cf3 print\cf1 (\cf4\b "move"\cf1\b0 )\line     \cf3\b def \cf1\b0 draw(\cf7 self\cf1 ):\line         \cf3 print\cf1 (\cf4\b "draw"\cf1\b0 )\line\line Point1 = Point()\line Point1.x=\cf2 10\f1  ----> x is a attribute so , it doesn't occur any error\f2\line\cf1 Point2=\cf2 20\f1    ----> there is no attribute so if we print point2, we will get          \f2\line\cf3 print\cf1 (Point1.x)\f1                                                    \cf2 error\cf1\f2\line Point1.draw()\par
\f1 O/P: 10\par
     draw\par
Pro:77\par
\b Constructor : constructor is a function it is called at the time of creating a object.\b0\par
\cf3\b\f2 class \cf1\b0 Point:\line     \cf3\b def \cf8\b0 __init__\cf1 (\cf7 self \cf1 , x, y):\f1  ---> __init__(self ) x and y are parameter\f2\line         \cf7 self\cf1 .x=x\f1                ---> using init , we can instialize the object. \f2\line         \cf7 self\cf1 .y=y\f1                     this method used to create or construct    \f2\line     \cf3\b def \cf1\b0 move(\cf7 self\cf1 ):\f1                  object.\f2\line         \cf3 print\cf1 (\cf4\b "move"\cf1\b0 )\line     \cf3\b def \cf1\b0 draw(\cf7 self\cf1 ):\line         \cf3 print\cf1 (\cf4\b "draw"\cf1\b0 )\line\line Point = Point(\cf2 10\cf1 ,\cf2 20\cf1 )\f1  --> 10 and 20 are object\f2\line\f1 Point.x= 11 ---> we can change the object\f2\par
\cf3 print\cf1 (Point.x)\par
\f1 O/P: 11\par
Pro:78\par
\cf3\b\f2 class \cf1\b0 Person:\line     \cf3\b def \cf1\b0 ___init__(\cf7 self\cf1 , name):\line         \cf7 self\cf1 .name = name\line\line     \cf3\b def \cf1\b0 talk(\cf7 self\cf1 ):\line         \cf3 print\cf1 (\cf4\b f"hi, i am \cf3\{ \cf7\b0 self\cf1 .name\cf3\b\}\cf4 "\cf1\b0 )\line\line\line john = Person(\cf4\b "John"\cf1\b0 )\line john.talk()\line\line bob = Person(\cf4\b "smith"\cf1\b0 )\line bob.talk()\line\par
\f1 O/P:\par
Pro:79\par
\b Inheritance : child class will have same behavior of parent class.\par
\cf3\f2 class \cf1\b0 mammal:\line       \cf3\b def \cf1\b0 walk(\cf7 self\cf1 ):\f1 --->class behavior will pass to all child classes.\f2\line           \cf3 print\cf1 (\cf4\b "walk"\cf1\b0 )\line\line\line\cf3\b class \cf1\b0 dog(mammal):\line     \cf3\b pass\line\line\line class \cf1\b0 cat(mammal):\line     \cf3\b pass\line\line\cf1\b0 dog1=dog()\line dog1.walk()\par
\f1 O/P: walk\par
Pro:80\par
\cf3\b\f2 class \cf1\b0 mammal:\line  \cf3\b def \cf1\b0 walk(\cf7 self\cf1 ):\line           \cf3 print\cf1 (\cf4\b "walk"\cf1\b0 )\line\line\line\cf3\b class \cf1\b0 dog(mammal):\line     \cf3\b pass\line\line\line class \cf1\b0 cat(mammal):\line  \cf3\b def  \cf1\b0 be__annoying(\cf7 self\cf1 ):\line     \cf3 print\cf1 (\cf4\b "annoying"\cf1\b0 )\line\line\line cat1=cat()\line cat1.be__annoying()\f1\par
O/P: annoying\f2\line\par
\f1 Pro:81\par
\b Modules : File with some python code and orginazer code used in multiple files. \par
Each file is modules.\par
Modules is contain related all functions and class.\par
\b0 Main Program:\par
\cf3\b\f2 def \cf1\b0 find_max(num):\line     max = (num[\cf2 0\cf1 ])\line     \cf3\b for \cf1\b0 number \cf3\b in \cf1\b0 num:\line         \cf3\b if \cf1\b0 number > max:\line             max = number\line     \cf3\b return \cf1\b0 max\line\par
\f1 subprogram:\par
\cf3\b\f2 from \cf1\b0 utils \cf3\b import \cf1\b0 find_max\line num=[\cf2 1\cf1 ,\cf2 4\cf1 ,\cf2 20\cf1 ,\cf2 50\cf1 ]\line maximum=find_max(num)\line\cf3 print\cf1 (maximum)\line\line\f1 O/P: 50\f2\par
\par
\f1 Pro:81\par
\b Packages : It is a container for multiple modules.\par
Package is a director or folder.\par
In package we can add directory , in that directory we can add all the modules\par
\b0 Pro:82\b\par
Generate random values:\par
{\cf0{\field{\*\fldinst{HYPERLINK https://docs.python.org/3/py-modindex.html }}{\fldrslt{https://docs.python.org/3/py-modindex.html\ul0\cf0}}}}\f1\fs20\par
{\cf0{\field{\*\fldinst{HYPERLINK https://docs.python.org/3/py-modindex.html }}{\fldrslt{https://docs.python.org/3/py-modindex.html\ul0\cf0}}}}\f1\fs20\par
\par
\cf3\b0\f2 import \cf1 random\line\cf3 for \cf1 i \cf3 in range\cf1 (\cf2 3\cf1 ):\line     \cf3 print\cf1 (random.randint(\cf2 10\cf1 ,\cf2 20\cf1 ))\par
\f1 O/P:\par
15\par
10\par
12\par
* it will print random number between 10 to 20\par
pro:83\par
\cf3\b\f2 import \cf1\b0 random\par
\line\cf3\b class \cf1\b0 Dice:\line      \cf3\b def \cf1\b0 roll(\cf7 self\cf1 ):\line          first = random.randint(\cf2 1\cf1 ,\cf2 6\cf1 )\line          second= random.randint(\cf2 1\cf1 ,\cf2 6\cf1 )\line          \cf3\b return \cf1\b0 first, second\line dices= Dice()\line\cf3 print\cf1 (dices.roll())\par
\f1 O/P: (1,3)\par
Pro:84\par
\b Files and directories : \par
How to check the path exist are not\par
\cf3\f2 from \cf1\b0 pathlib \cf3\b import \cf1\b0 Path\line path=Path(\cf4\b "Ecommerce"\cf1\b0 )\line\cf3 print\cf1 (path.exists())\line\line\f1 O/P: True\par
Pro: 85\par
How to create a directory if it is not exist.\b\par
\cf3\f2 from \cf1\b0 pathlib \cf3\b import \cf1\b0 Path\line path=Path(\cf4\b "Email"\cf1\b0 )\line\cf3 print\cf1 (path.mkdir())\par
\f1 Pro:86\par
How to remove directory\par
\cf3\b\f2 from \cf1\b0 pathlib \cf3\b import \cf1\b0 Path\line path=Path(\cf4\b "Email"\cf1\b0 )\line\cf3 print\cf1 (path.rmdir())\line\line\f1 Pro: 87\par
How to check all the directories and files in given path\par
\cf3\b\f2 from \cf1\b0 pathlib \cf3\b import \cf1\b0 Path\line path=Path( )\line\cf3\b for \cf1\b0 file \cf3\b in \cf1\b0 path.glob(\cf4\b ' * '\cf1\b0 ):\line     \cf3 print\cf1 (file)\line\line\f1 Pro: 88\par
PyPi and Pip(Huh?)\par
Install it \par
{\cf0{\field{\*\fldinst{HYPERLINK https://pypi.org/project/openpyxl/ }}{\fldrslt{https://pypi.org/project/openpyxl/\ul0\cf0}}}}\f1\fs20\par
Pro:89\par
\b Excel Spreadsheet\b0\par
How to proccess spread by using python\par
Click on project \par
click on Reveal\par
\f2\par
\f1\par
\par
\b\par
\b0\f2\par
\line\par
\f1\par
\par
\par
\b\par
\b0\f2\line\par
\par
\par
\par
\par
\par
\f1\lang9\par

\pard\sa200\sl276\slmult1\cf0\f0\fs22\par
\par
\par
\par
}
 